/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/lawn/lcd.gltf
*/

import React, { useRef } from 'react'
import { useGLTF, useAnimations, useTexture } from '@react-three/drei';
import { useConfigurator } from '../contexts/Configurator';

import * as THREE from "three";

export function Lcd(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/lawn/lcd.gltf')
  const { actions } = useAnimations(animations, group);

  const { lcdOneTexture, lcdTwoTexture, lcdThreeTexture, lcdFourTexture, lawnCeilingDrapeOne, lawnCeilingDrapeTwo, lawnCeilingDrapeThree, lawnCeilingDrapeFour } = useConfigurator();



  const materialTextureProps = useTexture({
    map: './gcdTextures/texOne/grey.jpg',
    // displacementMap: './textures/Catacomb_Wall_001_height.png',
    normalMap: './gcdTextures/texOne/grey.jpg',
    roughnessMap: './gcdTextures/texOne/grey.jpg',
    aoMap: './gcdTextures/texOne/grey.jpg',
  })

  materialTextureProps.map.repeat.set(3, 3);
  materialTextureProps.normalMap.repeat.set(3, 3);
  materialTextureProps.roughnessMap.repeat.set(3, 3);
  materialTextureProps.aoMap.repeat.set(3, 3);

  materialTextureProps.map.wrapS =
    materialTextureProps.map.wrapT =
    materialTextureProps.normalMap.wrapS =
    materialTextureProps.normalMap.wrapT =
    materialTextureProps.roughnessMap.wrapS =
    materialTextureProps.roughnessMap.wrapT =
    materialTextureProps.aoMap.wrapS =
    materialTextureProps.aoMap.wrapT =
    THREE.RepeatWrapping;


  const gcdRedTextureProps = useTexture({
    map: './gcdTextures/texTwo/red.jpg',
    // displacementMap: './textures/Catacomb_Wall_001_height.png',
    normalMap: './gcdTextures/texTwo/red.jpg',
    roughnessMap: './gcdTextures/texTwo/red.jpg',
    aoMap: './gcdTextures/texTwo/red.jpg',
  })

  gcdRedTextureProps.map.repeat.set(3, 3);
  gcdRedTextureProps.normalMap.repeat.set(3, 3);
  gcdRedTextureProps.roughnessMap.repeat.set(3, 3);
  gcdRedTextureProps.aoMap.repeat.set(3, 3);

  gcdRedTextureProps.map.wrapS =
    gcdRedTextureProps.map.wrapT =
    gcdRedTextureProps.normalMap.wrapS =
    gcdRedTextureProps.normalMap.wrapT =
    gcdRedTextureProps.roughnessMap.wrapS =
    gcdRedTextureProps.roughnessMap.wrapT =
    gcdRedTextureProps.aoMap.wrapS =
    gcdRedTextureProps.aoMap.wrapT =
    THREE.RepeatWrapping;


  const gcdYellowTextureProps = useTexture({
    map: './gcdTextures/texThree/yellow.jpg',
    // displacementMap: './textures/Catacomb_Wall_001_height.png',
    normalMap: './gcdTextures/texThree/yellow.jpg',
    roughnessMap: './gcdTextures/texThree/yellow.jpg',
    aoMap: './gcdTextures/texThree/yellow.jpg',
  })

  gcdYellowTextureProps.map.repeat.set(3, 3);
  gcdYellowTextureProps.normalMap.repeat.set(3, 3);
  gcdYellowTextureProps.roughnessMap.repeat.set(3, 3);
  gcdYellowTextureProps.aoMap.repeat.set(3, 3);

  gcdYellowTextureProps.map.wrapS =
    gcdYellowTextureProps.map.wrapT =
    gcdYellowTextureProps.normalMap.wrapS =
    gcdYellowTextureProps.normalMap.wrapT =
    gcdYellowTextureProps.roughnessMap.wrapS =
    gcdYellowTextureProps.roughnessMap.wrapT =
    gcdYellowTextureProps.aoMap.wrapS =
    gcdYellowTextureProps.aoMap.wrapT =
    THREE.RepeatWrapping;

  return (
    <group ref={group} {...props} dispose={null} scale={[0.3, 0.3, 0.3]} >

      <group name="Scene">

        {lawnCeilingDrapeOne === true && (
          <>

            <group name="Scenel1" visible={true}  >

              <mesh name="lcdl11" geometry={nodes.lcdl11.geometry} material={materials.Color_000} position={[7.3, 2.37, -1.21]} rotation={[1.5, 0, 0.41]} scale={[0.67, 6.34, 1.25]} >
                <meshStandardMaterial {...lcdOneTexture === 0 ? materialTextureProps
                  : lcdOneTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl12" geometry={nodes.lcdl12.geometry} material={materials['Color_000.002']} position={[4.47, 2.25, -2.93]} rotation={[1.5, 0, 0.41]} scale={[0.67, 6.34, 1.25]} >
                <meshStandardMaterial {...lcdOneTexture === 0 ? materialTextureProps
                  : lcdOneTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl13" geometry={nodes.lcdl13.geometry} material={materials['Color_000.003']} position={[1.56, 2.15, -4.29]} rotation={[1.5, 0, 0.41]} scale={[0.67, 6.34, 1.25]} >
                <meshStandardMaterial {...lcdOneTexture === 0 ? materialTextureProps
                  : lcdOneTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl14" geometry={nodes.lcdl14.geometry} material={materials['Color_000.004']} position={[-1.36, 2.07, -5.43]} rotation={[1.5, 0, 0.41]} scale={[0.67, 6.34, 1.25]} >
                <meshStandardMaterial {...lcdOneTexture === 0 ? materialTextureProps
                  : lcdOneTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl15" geometry={nodes.lcdl15.geometry} material={materials['Color_000.005']} position={[-4.1, 1.98, -6.76]} rotation={[1.5, 0, 0.41]} scale={[0.67, 6.34, 1.25]} >
                <meshStandardMaterial {...lcdOneTexture === 0 ? materialTextureProps
                  : lcdOneTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
            </group>
          </>
        )}

        {lawnCeilingDrapeTwo === true && (
          <>

            <group name="Scenel2" visible={true}  >

              <mesh name="lcdl31" geometry={nodes.lcdl31.geometry} material={materials['Color_000.013']} position={[-0.36, 2.29, 1.56]} rotation={[1.49, 0, -1.16]} scale={[0.65, 5.14, 1.25]} >
                <meshStandardMaterial {...lcdTwoTexture === 0 ? materialTextureProps
                  : lcdTwoTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl32" geometry={nodes.lcdl32.geometry} material={materials['Color_000.014']} position={[0.66, 2.07, -1.17]} rotation={[1.49, 0, -1.16]} scale={[0.65, 5.14, 1.25]} >
                <meshStandardMaterial {...lcdTwoTexture === 0 ? materialTextureProps
                  : lcdTwoTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl34" geometry={nodes.lcdl34.geometry} material={materials['Color_000.015']} position={[1.54, 1.84, -4.07]} rotation={[1.49, 0, -1.16]} scale={[0.65, 5.14, 1.25]} >
                <meshStandardMaterial {...lcdTwoTexture === 0 ? materialTextureProps
                  : lcdTwoTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl35" geometry={nodes.lcdl35.geometry} material={materials['Color_000.016']} position={[2.59, 1.6, -6.97]} rotation={[1.49, 0, -1.16]} scale={[0.65, 5.14, 1.25]} >
                <meshStandardMaterial {...lcdTwoTexture === 0 ? materialTextureProps
                  : lcdTwoTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl33" geometry={nodes.lcdl33.geometry} material={materials['Color_000.017']} position={[3.92, 1.37, -9.8]} rotation={[1.49, 0, -1.16]} scale={[0.65, 5.14, 1.25]} >
                <meshStandardMaterial {...lcdTwoTexture === 0 ? materialTextureProps
                  : lcdTwoTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>

            </group>

          </>
        )}

        {lawnCeilingDrapeThree === true && (
          <>

            <group name="Scenel2" visible={true}  >

              <mesh name="lcdl3012" geometry={nodes.lcdl3012.geometry} material={materials.cloth_1} position={[6.3, 0.65, -2.19]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl3006" geometry={nodes.lcdl3006.geometry} material={materials['cloth_1.001']} position={[4.37, 0.65, -3.25]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl3007" geometry={nodes.lcdl3007.geometry} material={materials['cloth_1.002']} position={[2.41, 0.65, -4.08]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl3008" geometry={nodes.lcdl3008.geometry} material={materials['cloth_1.003']} position={[0.19, 0.65, -5.02]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >\
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl36" geometry={nodes.lcdl36.geometry} material={materials['cloth_1.004']} position={[-1.9, 0.65, -6.27]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
              <mesh name="lcdl3009" geometry={nodes.lcdl3009.geometry} material={materials['cloth_1.005']} position={[8.3, 0.65, -1.45]} rotation={[1.53, -0.02, 0.38]} scale={[3.09, 3.09, 2.1]} >
                <meshStandardMaterial {...lcdThreeTexture === 0 ? materialTextureProps
                  : lcdThreeTexture === 1 ? gcdRedTextureProps
                    : gcdYellowTextureProps} />
              </mesh>
            </group>
          </>
        )}

        {lawnCeilingDrapeFour === true && (
          <>
            <group name="Scenel4" visible={true}  >
              <group name="lcdl411" position={[6.16, 1.57, -1.13]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4" geometry={nodes.lcdl4.geometry} material={materials.curtain_rode} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4_1" geometry={nodes.lcdl4_1.geometry} material={materials.curtain} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4_2" geometry={nodes.lcdl4_2.geometry} material={materials.FrontColor} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl48" position={[4.34, 1.56, -2.17]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4001" geometry={nodes.lcdl4001.geometry} material={materials['curtain_rode.001']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4001_1" geometry={nodes.lcdl4001_1.geometry} material={materials['curtain.001']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4001_2" geometry={nodes.lcdl4001_2.geometry} material={materials['FrontColor.001']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl47" position={[2.26, 1.56, -3.21]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4002_1" geometry={nodes.lcdl4002_1.geometry} material={materials['curtain_rode.002']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4002_2" geometry={nodes.lcdl4002_2.geometry} material={materials['curtain.002']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4002_3" geometry={nodes.lcdl4002_3.geometry} material={materials['FrontColor.002']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl45" position={[0.25, 1.56, -4.14]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4003" geometry={nodes.lcdl4003.geometry} material={materials['curtain_rode.003']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4003_1" geometry={nodes.lcdl4003_1.geometry} material={materials['curtain.003']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4003_2" geometry={nodes.lcdl4003_2.geometry} material={materials['FrontColor.003']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl43" position={[-1.8, 1.56, -5.33]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4004" geometry={nodes.lcdl4004.geometry} material={materials['curtain_rode.004']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4004_1" geometry={nodes.lcdl4004_1.geometry} material={materials['curtain.004']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4004_2" geometry={nodes.lcdl4004_2.geometry} material={materials['FrontColor.004']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl41" position={[-4.04, 1.56, -6.33]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4005" geometry={nodes.lcdl4005.geometry} material={materials['curtain_rode.005']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4005_1" geometry={nodes.lcdl4005_1.geometry} material={materials['curtain.005']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4005_2" geometry={nodes.lcdl4005_2.geometry} material={materials['FrontColor.005']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl42" position={[-2.94, 1.42, -5.93]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4006" geometry={nodes.lcdl4006.geometry} material={materials['curtain_rode.006']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4006_1" geometry={nodes.lcdl4006_1.geometry} material={materials['curtain.006']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4006_2" geometry={nodes.lcdl4006_2.geometry} material={materials['FrontColor.006']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl44" position={[-0.7, 1.41, -4.93]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4007" geometry={nodes.lcdl4007.geometry} material={materials['curtain_rode.007']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4007_1" geometry={nodes.lcdl4007_1.geometry} material={materials['curtain.007']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4007_2" geometry={nodes.lcdl4007_2.geometry} material={materials['FrontColor.007']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl46" position={[1.35, 1.42, -3.73]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4008" geometry={nodes.lcdl4008.geometry} material={materials['curtain_rode.008']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4008_1" geometry={nodes.lcdl4008_1.geometry} material={materials['curtain.008']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4008_2" geometry={nodes.lcdl4008_2.geometry} material={materials['FrontColor.008']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl4002" position={[3.36, 1.42, -2.81]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4009" geometry={nodes.lcdl4009.geometry} material={materials['curtain_rode.009']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4009_1" geometry={nodes.lcdl4009_1.geometry} material={materials['curtain.009']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4009_2" geometry={nodes.lcdl4009_2.geometry} material={materials['FrontColor.009']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl410" position={[5.44, 1.42, -1.77]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4010" geometry={nodes.lcdl4010.geometry} material={materials['curtain_rode.010']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4010_1" geometry={nodes.lcdl4010_1.geometry} material={materials['curtain.010']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4010_2" geometry={nodes.lcdl4010_2.geometry} material={materials['FrontColor.010']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>
              <group name="lcdl412" position={[7.26, 1.42, -0.73]} rotation={[1.54, -0.01, -1.14]} scale={[5.56, 5.56, 3.1]}>
                <mesh name="lcdl4011" geometry={nodes.lcdl4011.geometry} material={materials['curtain_rode.011']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4011_1" geometry={nodes.lcdl4011_1.geometry} material={materials['curtain.011']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
                <mesh name="lcdl4011_2" geometry={nodes.lcdl4011_2.geometry} material={materials['FrontColor.011']} >
                  <meshStandardMaterial {...lcdFourTexture === 0 ? materialTextureProps
                    : lcdFourTexture === 1 ? gcdRedTextureProps
                      : gcdYellowTextureProps} />
                </mesh>
              </group>

            </group>
          </>
        )}


      </group>
    </group >
  )
}

useGLTF.preload('./models/lawn/lcd.gltf')
